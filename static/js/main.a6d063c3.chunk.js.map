{"version":3,"sources":["favMeals/FavMeals.js","components/HeartBtn.js","randomMeals/RandomMeal.js","SearchMeals.js","App.js","reportWebVitals.js","index.js"],"names":["FavMeals","favouriteMealData","console","log","documentData","JSON","parse","localStorage","getItem","list","className","id","src","image","alt","title","HeartBtn","props","state","name","mealID","toggle","setItem","this","stringify","setState","prevState","func","onClick","trigger","handleClickSubmit","Component","RandomMeal","area","functionCall","SearchMeals","favMeal","App","useState","meal","setMeal","favoriteMeal","setFavoriteMeal","search","setSearch","query","setQuery","searchMeal","setSearchMeal","useEffect","axios","get","then","res","data","meals","catch","error","sendData","e","SEARCH_API","getSearch","preventDefault","onSubmit","type","placeholder","value","onChange","target","idMeal","strMeal","strArea","strMealThumb","map","recipe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d063c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function FavMeals({ favouriteMealData }) {\r\n  \r\n  console.log(favouriteMealData)\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"document\"));\r\n\r\n  if (documentData) {\r\n    var list = (\r\n      <ul className=\"fav-meals\" id=\"fav-meals\">\r\n        <li>\r\n          <img src={documentData.image} alt=\"\" />\r\n          <span>{documentData.title}</span>\r\n        </li>\r\n      </ul>\r\n    );\r\n  } else {\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"fav-container\">\r\n        <h3>Favorite Meals</h3>\r\n        {list}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component} from 'react';\r\n \r\nexport default class HeartBtn extends Component {\r\n    documentData;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.name,\r\n            image: this.props.image,\r\n            mealID: this.props.mealID,\r\n            toggle: false\r\n        }\r\n    }\r\n\r\n\r\n    handleClickSubmit() {\r\n       localStorage.setItem(this.props.name,JSON.stringify(this.state.title,this.state.image,this.state.mealID));\r\n    }\r\n \r\n\r\n   trigger(){\r\n    this.setState(prevState=>({\r\n        toggle: !prevState.toggle\r\n    }));\r\n    this.props.func(this.state);\r\n    // console.log(this.state)\r\n  };\r\n\r\nrender(){\r\n    return (\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.trigger();\r\n              this.handleClickSubmit();\r\n            }}\r\n            className={`fav-btn ${this.state.toggle ? \"active\" : \"\"}`}\r\n          >\r\n            <i className=\"fas fa-heart\"></i>\r\n          </button>\r\n        </div>\r\n      )\r\n}\r\n};\r\n","import React from \"react\";\r\nimport HeartBtn from \"../components/HeartBtn\";\r\n\r\nexport function RandomMeal(props) {\r\n  return (\r\n    <div className=\"meal\">\r\n      <div className=\"meal-header\">\r\n        <span className=\"random\"> Today's Recipe </span>\r\n        <img src={props.image} alt=\"Random\" />\r\n      </div>\r\n\r\n      <div className=\"meal-body\">\r\n        <h4>{props.name}</h4>\r\n        <HeartBtn mealID={props.mealID}\r\n            name={props.name}\r\n            area={props.area}\r\n            image={props.image} func={ props.functionCall}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport HeartBtn from './components/HeartBtn';\r\n\r\nexport function SearchMeals({name,image,mealID,functionCall,area}) {\r\n  return (\r\n    <div className=\"meal\">\r\n      <div className=\"meal-header\">\r\n        <span className=\"random\"> {area} </span>\r\n        <img src={image} alt=\"Random\" />\r\n      </div>\r\n\r\n      <div className=\"meal-body\">\r\n        <h4>{name}</h4>\r\n        <HeartBtn favMeal={mealID} func={functionCall}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport FavMeals from \"./favMeals/FavMeals\";\nimport { RandomMeal } from \"./randomMeals/RandomMeal\";\nimport { SearchMeals } from \"./SearchMeals\";\n\nconst API = \"https://www.themealdb.com/api/json/v1/1/random.php\";\n\nfunction App() {\n\n  const [meal, setMeal] = useState({});\n  const [favoriteMeal, setFavoriteMeal] = useState({});\n  const [search,setSearch]=useState('')\n  const [query,setQuery]=useState('pizza')\n  const [searchMeal, setSearchMeal] = useState([]);\n  \n\n  useEffect(() => {\n    axios\n      .get(API)\n      .then((res) => {\n        setMeal(res.data.meals[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const sendData = (e) => {\n    setFavoriteMeal({\n      favoriteMeal: e,\n    });\n  };\n\n  \n\nconst SEARCH_API=\"https://www.themealdb.com/api/json/v1/1/search.php?s=\"+query;\n\n  useEffect(() => {\n      axios\n      .get(SEARCH_API)\n      .then((res) => {\n        setSearchMeal(res.data.meals);\n      }).catch((error) => {\n        console.log(error);\n      });\n  }, [query])\n\n const updateSearch = e =>{\n setSearch(e.target.value)\n }\n\n const getSearch=(e)=>{\n   e.preventDefault();\n   setQuery(search);\n   setSearch('');\n }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch}>\n        <input type=\"text\" placeholder=\"write a meal\" value={search} onChange={updateSearch}></input>\n        <button type='submit' onClick={getSearch}>\n          <i className=\"fas fa-search\" />\n        </button>\n      </form>\n      <FavMeals favouriteMealData={favoriteMeal} />\n      <RandomMeal mealID={meal.idMeal}\n            name={meal.strMeal}\n            area={meal.strArea}\n            image={meal.strMealThumb} functionCall={sendData} />\n      {searchMeal.map((recipe) => {\n        return (\n          <SearchMeals\n            key={recipe.idMeal}\n            mealID={recipe.idMeal}\n            name={recipe.strMeal}\n            area={recipe.strArea}\n            image={recipe.strMealThumb}\n            functionCall={sendData}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}